## Spring Security OAuth2 Client Configuration
#spring.security.oauth2.client.registration.cognito.client-id=5hk3hiq09hc9mgdfbbnb1u6t28
#spring.security.oauth2.client.registration.cognito.client-secret=${aws_client_secret}
#spring.security.oauth2.client.registration.cognito.scope=email,openid,phone
#spring.security.oauth2.client.registration.cognito.redirect-uri=https://d84l1y8p4kdic.cloudfront.net
#
#spring.security.oauth2.client.provider.cognito.issuer-uri=https://cognito-idp.eu-north-1.amazonaws.com/eu-north-1_RuUXlTvU3
#spring.security.oauth2.client.provider.cognito.user-name-attribute=username
## database setup
#spring.datasource.url=jdbc:postgresql://<<your-db-url>>:5432/spc
#spring.datasource.username=username
#spring.datasource.password=password
#
## Hibernate properties
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

# Spring Security OAuth2 Client Configuration
spring.security.oauth2.client.registration.cognito.client-id=528jj5ipkb6iu1dg5vsv9p4l2r
spring.security.oauth2.client.registration.cognito.client-secret=dupa
spring.security.oauth2.client.registration.cognito.scope=phone,openid,email
spring.security.oauth2.client.registration.cognito.redirect-uri=http://localhost:8080/files
spring.security.oauth2.client.provider.cognito.issuerUri=https://cognito-idp.eu-north-1.amazonaws.com/eu-north-1_uRVljTSiY
spring.security.oauth2.client.provider.cognito.user-name-attribute=username

logging.level.org.springframework.security=DEBUG

# aws
aws.region=eu-north-1
aws.s3.bucket=user-file-bucket
aws.s3.accessKey=dummy
aws.s3.secretKey=dummy
aws.s3.endpoint=http://127.0.0.1:4566

aws.cloudwatch.logs.region=us-east-1
aws.cloudwatch.logs.endpoint=http://localhost:4566
aws.cloudwatch.logs.accessKey=dummy
aws.cloudwatch.logs.secretKey=dummy
aws.cloudwatch.logs.groupName=my-log-group
aws.cloudwatch.logs.streamName=my-log-stream

# database setup
spring.datasource.url=jdbc:postgresql://localhost:5432/spc
spring.datasource.username=spc
spring.datasource.password=password

# Hibernate properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#logs
logging.level.spc.cloud=info